extends ../_layout

block article
  article
    //- pre=JSON.stringify(current)
    //- pre=JSON.stringify(public.articles)
    //- pre=title

    //
      Header
    //
    header.article-header
      - var myCurrent = public.articles._data[current.path[1]]
      - var path = '/' + current.path[0] + '/' + current.path[1]
      h1
        a(href=path + ".html", pjax-page) #{myCurrent.title}
      time(pubdate, datetime="#{myCurrent.date}") #{myCurrent.date}

    //
       Variables
    //
    - var titles = [], tocified = tocify(yield);

    //
      Toc
    //
    if(titles.length > 0)
      nav.toc
        each title in titles
          a(href="#" + title.id)= title.text
          if(title.subtitles.length)
            div
              each subtitle in title.subtitles
                a(href="#" + subtitle.id)= subtitle.text

    //
      Pagination
    //
    if(public.articles[current.path[1]])
      nav.article-pager
        for filename in public.articles[current.path[1]]._contents
          - var url = path + '/' + filename
          - var key = filename.substr(0, filename.lastIndexOf('.'))
          - var _title = public.articles[current.path[1]]._data[key].title
          span(class=title === _title ? 'active' : '')
            a(href=url, pjax-page)= _title

    //- if(public.articles[current.path[1]])
    //-   nav.pagination
    //-     for filename in public.articles[current.path[1]]._contents
    //-       - var url = path + '/' + filename
    //-       - var key = filename.substr(0, filename.lastIndexOf('.'))
    //-       - var title = public.articles[current.path[1]]._data[key].title
    //-       a(href=url, pjax-page)= title
    //
      Article Content
    //
    div.article-content
      if current.path.length > 2
        block page
      else
        != tocified

    //
      Footer
    //
    footer
      div.license
        span
          a(style="color: #444", href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/", target="_blank") CC BY-NC-SA 3.0 License

    //
      Inline Function
    //
    - function tocify(html) {
    -   var regex = /<h([2|3])>(.+?)<\/h[2|3]>|<a href="(.+?)">.+?<\/a>/g;
    -   var i = 0, j = 0;
    -   var title, subtitle, id;
    -   html = html.replace(regex, function(matchStr, level, text, href){
    -     if(level === '2'){
    -       id = 'section' + i;
    -       title = {id: id, text: text, subtitles: []};
    -       titles.push(title);
    -       i++;
    -       j = 0;
    -     }else if(level === '3'){
    -       id = 'section' + i + '_' + j;
    -       subtitle = {id: id, text: text};
    -       title.subtitles.push(subtitle);
    -       j++;
    -     }else{
    -       // get A tag rather than H tag
    -       // add target="_blank" to A tag
    -       if(href.indexOf('://') > 0){
    -         return matchStr.replace(/(.+?)>/, '$1 target="_blank">');
    -       }
    -       else{return matchStr;}
    -     }
    -     return matchStr.replace(/(.+?)>/, '$1 id="' + id + '">');
    -   });
    -   return html;
    - }
